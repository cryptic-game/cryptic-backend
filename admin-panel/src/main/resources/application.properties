# jpa
spring.datasource.url=jdbc:postgresql://${SQL_HOST:}:${SQL_PORT:5432}/${SQL_DB:cryptic}
spring.datasource.username=${SQL_USER:cryptic}
spring.datasource.password=${SQL_PASS:cryptic}
spring.datasource.hikari.initialization-fail-timeout=15000
spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.session.events.log.LOG_QUERIES_SLOWER_THAN_MS=20
# jackson
#spring.jackson.serialization.write-dates-as-timestamps=true
# http
server.port=${HTTP_PORT:8080}
server.compression.enabled=true
# logging
logging.level.org.hibernate=ERROR
logging.level.reactor.netty.http.server.AccessLog=DEBUG
springdoc.swagger-ui.path=/swagger-ui
#management.server.port=${MANAGEMENT_PORT:8081}
#management.endpoints.web.exposure.include=*
# OpenID-Connect
spring.security.oauth2.client.registration.cryptic-oauth.client-name=${OIDC_NAME:}
spring.security.oauth2.client.registration.cryptic-oauth.client-id=${OIDC_CLIENT_ID:}
spring.security.oauth2.client.registration.cryptic-oauth.client-secret=${OIDC_CLIENT_SECRET:}
spring.security.oauth2.client.registration.cryptic-oauth.provider=cryptic-oauth
spring.security.oauth2.client.provider.cryptic-oauth.issuer-uri=${OIDC_ISSUER_URL:}
#spring.security.oauth2.client.provider.cryptic-oauth.user-name-attribute=${OIDC_USERNAME_ATTRIBUTE:}
server.forward-headers-strategy=native
