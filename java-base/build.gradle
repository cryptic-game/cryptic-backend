plugins {
    id 'java-library'
}

dependencies {
    api(platform('org.springframework:spring-framework-bom:5.3.3'))

    /* Logger */
    api('org.slf4j:slf4j-api:1.7.30')
    implementation('ch.qos.logback:logback-classic:1.2.3')
    implementation('io.sentry:sentry-logback:4.1.0')

    /* Bootstrapping & Dependency Injection */
    api('org.springframework:spring-context')
    annotationProcessor('org.springframework:spring-context-indexer:5.3.3')
    api('jakarta.annotation:jakarta.annotation-api:1.3.5')

    /* Database */
    api(platform('org.springframework.data:spring-data-releasetrain:Neumann-SR6'))
    api('jakarta.persistence:jakarta.persistence-api:2.2.3')
    api('jakarta.transaction:jakarta.transaction-api:1.3.3')
    api('org.springframework.data:spring-data-jpa') {
        exclude(group: "org.aspectj", module: "aspectjrt")
    }
    implementation('com.zaxxer:HikariCP:4.0.1')
    api('org.hibernate:hibernate-core:5.4.28.Final') {
        exclude(group: 'javax.activation', module: 'javax.activation-api')
        exclude(group: 'javax.persistence', module: 'javax.persistence-api')
        exclude(group: 'org.jboss.spec.javax.transaction', module: 'jboss-transaction-api_1.2_spec')
    }

    runtimeOnly('org.postgresql:postgresql:42.2.18')
    runtimeOnly('org.mariadb.jdbc:mariadb-java-client:2.7.2')

    /* Network */
    api(platform('io.projectreactor:reactor-bom:2020.0.3'))
    api('io.projectreactor:reactor-core')
    api('io.projectreactor.netty:reactor-netty')
//    api('io.projectreactor.addons:reactor-extra')
    runtimeOnly('io.netty:netty-tcnative-boringssl-static:2.0.36.Final')

    /* Json */
    api('com.google.code.gson:gson:2.8.6')

    /* Spring Security */
    api(platform('org.springframework.security:spring-security-bom:5.4.4'))
    api('org.springframework.security:spring-security-core')
    api('org.bouncycastle:bcpkix-jdk15on:1.68')

    /* JWT */
    api('io.jsonwebtoken:jjwt-api:0.11.2')
    runtimeOnly('io.jsonwebtoken:jjwt-impl:0.11.2')
    runtimeOnly('io.jsonwebtoken:jjwt-gson:0.11.2')

    /* Annotations */
    compileOnlyApi('org.jetbrains:annotations:20.1.0')

    /* Metrics */
    // api('io.micrometer:micrometer-core:1.5.5')
    // implementation('io.micrometer:micrometer-registry-influx:1.5.5')

    /* Caching */
    runtimeOnly('io.lettuce:lettuce-core:6.0.2.RELEASE')
    api('org.springframework.data:spring-data-redis')
}
